<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>프로그래밍 문제 on 개발자 이동욱</title>
    <link>https://dongwooklee96.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%AC%B8%EC%A0%9C.html</link>
    <description>Recent content in 프로그래밍 문제 on 개발자 이동욱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 10 Aug 2021 19:15:14 +0900</lastBuildDate><atom:link href="https://dongwooklee96.github.io/categories/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%AC%B8%EC%A0%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>동적 프로그래밍 문제 파악</title>
      <link>https://dongwooklee96.github.io/post/2021/08/10/%EB%8F%99%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%AC%B8%EC%A0%9C-%ED%8C%8C%EC%95%85.html</link>
      <pubDate>Tue, 10 Aug 2021 19:15:14 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/08/10/%EB%8F%99%EC%A0%81-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%AC%B8%EC%A0%9C-%ED%8C%8C%EC%95%85.html</guid>
      <description>&lt;h3 id=&#34;동적-프로그래밍-문제-파악&#34;&gt;동적 프로그래밍 문제 파악&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;동적 프로그래밍으로 해결하는 문제는 모든 경우의 수를 파악하여 진행하면서 지수승의 시간 복잡도를 가지는 경우가 많다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;모든 경우의 수를 조합하면서, 확인하는 과정을 가지는 문제는 동적 프로그래밍 접근법이 가능하다고 보면 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음과 같은 키워드가 들어가면, 동적 프로그래밍 접근법을 이용하여 풀 수 있는 문제이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;shortest&amp;#34;, &amp;#34;longest&amp;#34;, &amp;#34;minimized&amp;#34;, &amp;#34;maximized&amp;#34;, 
&amp;#34;least&amp;#34;, &amp;#34;most&amp;#34;, &amp;#34;fewest&amp;#34;, &amp;#34;greatest&amp;#34;, &amp;#34;biggest&amp;#34;, &amp;#34;smallest&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;단계별-동적-프로그래밍-문제-해결-방법&#34;&gt;단계별 동적 프로그래밍 문제 해결 방법&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;전체 탐색(&lt;code&gt;Brute Force&lt;/code&gt;) 방법으로 우선 문제를 해결해본다.&lt;/li&gt;
&lt;li&gt;그 다음에 해당 풀이를 분석하여, 반복되는 작업을 정리한다, 즉 전체 탐색에서 하위 문제로 쪼개어보고 반복되는 단계가 있는지를 찾아낸다.&lt;/li&gt;
&lt;li&gt;순조롭게 진행되면 역으로 동적 방식이 용이하다고 판단할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=267996120&#34;&gt;쓰면서 익히는 알고리즘과 자료구조&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
