<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>주간 회고 on 개발자 이동욱</title>
    <link>https://dongwooklee96.github.io/categories/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</link>
    <description>Recent content in 주간 회고 on 개발자 이동욱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Sun, 28 Mar 2021 18:15:49 +0900</lastBuildDate><atom:link href="https://dongwooklee96.github.io/categories/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>주간 회고</title>
      <link>https://dongwooklee96.github.io/post/2021/03/28/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sun, 28 Mar 2021 18:15:49 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/03/28/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>&lt;h1 id=&#34;주간-회고&#34;&gt;주간 회고&lt;/h1&gt;
&lt;p&gt;이번주에 있던 일들을 종합해서 회고를 해보고 정리를 해보았습니다.&lt;/p&gt;
&lt;h3 id=&#34;facts-사실-객관&#34;&gt;Facts (사실, 객관)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;토이 프로젝트를 시작했다.&lt;/li&gt;
&lt;li&gt;내가 여태까지 정리했던 글을 보면서, 남에게 이를 설명할 수 있는지 녹화를 해보고 이를 시청하였다.&lt;/li&gt;
&lt;li&gt;다른 곳에 적어두었지만, 미쳐 블로그에 올리지 않은 내용을 정리해서 블로그에 포스팅을 해보았다.&lt;/li&gt;
&lt;li&gt;회의 때 토의했던 내용중에 다르게 해석한 부분이 있었다.&lt;/li&gt;
&lt;li&gt;회의 때 토의했던 내용을 착각한 뒤로 팀원에게 메신저로 내가 했던 일을 공유하고 그 다음에 어떤 일을 진행할 것인지 상세하게 말했다.&lt;/li&gt;
&lt;li&gt;내가 궁금해하는 기업이 어떤 기술을 쓰는지를 분석하기 위해서 그 회사의 기술 블로그 및 세미나 발표 영상을 보면서 공부를 하였다.&lt;/li&gt;
&lt;li&gt;토이 프로젝트를 진행할 때 사용자 관점에서 생각을 하지 못한 것 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/112748805-4b6d1200-8ff9-11eb-93b1-24b0b3265418.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;토이 프로젝트를 진행할 때 주 마다 사용자는 무엇을 할 수 있는지를 적어야 하는데, 나는 우선 개발이 되지 않았으므로 사용자는 할 수 있는 것이 없다고 했다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;feelings-느낌-주관&#34;&gt;Feelings (느낌, 주관)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;토이 프로젝트를 하면서 혼자서 많은 일을 하는 것 보다, 다른 사람들에게 일감을 나누고 같이 협업하는 방법을 배우는게 중요하다고 생각했다.&lt;/li&gt;
&lt;li&gt;실제로 설명을 해보면서 내가 제대로 설명하지 못하는 것을 알게 되었고, 실제로 모르고 있었음에도 불구하고 안다고 착각하는 것도 많았다.&lt;/li&gt;
&lt;li&gt;내가 공부한 내용을 포스팅 하면서 다시 복습하니까 몰랐던 부분도 이해가 되고 좋았다. 다만 시간이 너무 많이 들어서 진작 포스팅에 재미를 느꼈으면 어떨까하는 아쉬움도 남는다.&lt;/li&gt;
&lt;li&gt;회의때 집중을 하면서 들어야겠다는 생각이 들었고 조금 많이 부끄러웠다.&lt;/li&gt;
&lt;li&gt;팀원 분들이 좋아하셨고, 내가 어떤 문제를 막혔을 때 내가 진행했던 상황을 이해시키는 시간도 훨씬 빨랐다.&lt;/li&gt;
&lt;li&gt;과거에 그 회사가 고민한 내용을 배울 수 있었고, 현재 어떤 기술을 사용하는지도 익힐 수 있었다.&lt;/li&gt;
&lt;li&gt;하지만, 트레이너분은 사용자에게 어떤 방식으로도 가치를 전달할 수 있는 것이 중요하다고 했고 구글 스프레드를 이용해서 사용자에게 가치를 전달 할 수 있다고 했다. 그 이야기를 듣고 내가 너무 개발자 적인 사고에 갇혀있다는 생각을 했다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;findings-배운-점&#34;&gt;Findings (배운 점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;배운 내용을 직접 남에게 설명하듯이 설명해보면서 내가 정말로 알고있는지를 검증하는 법을 배웠다.&lt;/li&gt;
&lt;li&gt;웹 애플리케이션 보안이 정말로 중요함에도 불구하고 보안에 대해서 소흘히 생각하고 있었다.&lt;/li&gt;
&lt;li&gt;실제 웹 애플리케이션을 만들 때 비즈니스 로직 뿐만 아니라 인프라적인 지식이 중요하다는 것을 깨닫게 되었다. 현재 회사에서 데브옵스 팀이 있다고 해서 인프라적인 지식을 몰라도 되는 것은 아니다 토이프로젝트를 하거나 따로 익히면서 인프라적인 공부를 해야겠다.&lt;/li&gt;
&lt;li&gt;브라우저 보안을 위한 다양한 정책을 알게 되었고, 어떠한 에러가 발생하였을 때, 왜 이러한 에러가 발생하였는지 브라우저, 운영체제, 프레임워크 설계자 관점에서 생각을 해봐야겠다는 것을 느꼈다.&lt;/li&gt;
&lt;li&gt;일을 시작하기전에, 다른 팀원들에게 내가 하려는 일과 했던 일을 공유하자.&lt;/li&gt;
&lt;li&gt;기업을 분석할 때, 그 회사 및 부서에서 작성한 기술 블로그를 살펴보고 세미나에서 발표한 영상을 보면서 분석하면 그 회사에 대해서 자세히 알 수 있을 것이다.&lt;/li&gt;
&lt;li&gt;개발적으로만 문제를 해결하려고 하지 말자. 다양한 방법으로 문제를 해결할 수 있다 중요한 것은 어떤 가치를 줄 수 있는가이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;good-잘한점&#34;&gt;Good (잘한점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;배우려고 노력했고, 기록하려고 노력했다, 이제는 남에게 쉽게 알려줄 수 있게 노력해야겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bad-개선할-점&#34;&gt;Bad (개선할 점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;남에게 설명해본적이 별로 없는 것 같다. 이는 나중에 들어오는 사람에게 뭔가를 설명할 때 제대로 설명해주지 못해서 많은 도움을 줄 수 없을 수도 있다. 따라서 지금부터라도 내가 알고 있는 것을 잘 설명할 수 있는 연습을 해야겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;affimation-자기-선언&#34;&gt;Affimation (자기 선언)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;내가 정말로 알고 있는지 남에게 설명하면서 이를 검증해보자.&lt;/li&gt;
&lt;li&gt;발표를 평소에 많이 해보고, 혼자서라도 남에게 설명해주듯이 설명하는 연습을 하자.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>주간 회고</title>
      <link>https://dongwooklee96.github.io/post/2021/03/21/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sun, 21 Mar 2021 17:15:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/03/21/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>&lt;h1 id=&#34;주간-회고&#34;&gt;주간 회고&lt;/h1&gt;
&lt;p&gt;이번주에 있던 일들을 종합해서 회고를 해보고 정리를 해보았습니다.&lt;/p&gt;
&lt;h3 id=&#34;facts-사실-객관&#34;&gt;Facts (사실, 객관)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;코딩을 하면서, 사소한 실수가 발견되었고 재배포를 해야하는 상황이 되었다.&lt;/li&gt;
&lt;li&gt;내가 아는 것을 다른사람에게 설명하는데 생각보다 말이 잘 나오지 않았고, 더듬더듬 말하고 있었다.&lt;/li&gt;
&lt;li&gt;오랜만에 코딩 테스트 문제를 풀어보았다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;feelings-느낌-주관&#34;&gt;Feelings (느낌, 주관)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;다른 사람들에게 미안하기도 했고, 시간이 많이 소모되었다.&lt;/li&gt;
&lt;li&gt;다른 사람에게 쉽게 설명할 수 없으면 제대로 아는 것이 아니라는 생각이 들었다.&lt;/li&gt;
&lt;li&gt;남들이 꺼려하는 일을 먼저 나서서 하려고 하는 자세가 동료들에게 신뢰를 줄 수 있을 것같다.&lt;/li&gt;
&lt;li&gt;문제의 난이도가 생각보다 높지 않아서 그런지는 몰라도 매우 재미있었다.&lt;/li&gt;
&lt;li&gt;취업 준비를 할 때, 코딩 테스트 문제를 푸는 것과 직장에 다니는 입장에서 코딩 테스트 문제를 푸는 느낌이 달랐다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;findings-배운-점&#34;&gt;Findings (배운 점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;나의 사소한 실수가 다른 사람들의 시간을 많이 소모시키는 것을 알 수 있었다.
꼼꼼하게 확인하여 다른 사람들에게 피해를 끼치는 일이 없도록 하자.&lt;/li&gt;
&lt;li&gt;어떤 개념을 제대로 배웠는지 확인하려면 내가 배운 내용을 다른 사람에게 설명을 해보자.&lt;/li&gt;
&lt;li&gt;배우는 속도에 집착하기 보다는 하나라도, 제대로 알고 있는지, 남에게 설명할 수 있는지를 확인하자.&lt;/li&gt;
&lt;li&gt;웹 애플리케이션을 구성하는 부분을 전체적으로 공부해야겠다는 생각을 했다.&lt;/li&gt;
&lt;li&gt;보안에 대해서는 나의 일이 아니고, 보안 전문가의 일이라고 생각했던 경향이 있었던 것 같다.&lt;/li&gt;
&lt;li&gt;앞으로 토이프로젝트를 할 때는 기능도 신경을 많이 쓰지만 보안에 대한 점도 많은 공부를 하고 신경을 쎠서 공부를 해야할 것이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;API&lt;/code&gt; 설계에 대한 부분을 소흘히 한 것 같다. 어떻게 하면 좋은 &lt;code&gt;API&lt;/code&gt;를 설계할 수 있을지에 대해서 공부를 하면 좋을 것 같다.&lt;/li&gt;
&lt;li&gt;하나라도 제대로 공부하는 것이 중요하기는 하지만, 서버 및 브라우저의 내부 원리에 대해서 깊게 공부할 필요를 느끼게 되었다. 사실 &lt;code&gt;DevOps&lt;/code&gt; 팀에서 인프라 관리를 하기는 하지만, 이러한 부분도 잘 알아야지 좋은 개발자가 될 것 같다.&lt;/li&gt;
&lt;li&gt;코딩 테스트를 풀면서 코드부터 구현하는 것보다 내가 어떻게 구현할지를 미리 생각하고 나서 코드를 작성하니까 훨씬 재미있고 문제도 잘 풀리는 것 같다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;good-잘한점&#34;&gt;Good (잘한점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;내가 했던 일을 다른 동료들에게 공유하려고 노력하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bad-개선할-점&#34;&gt;Bad (개선할 점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;꼼곰히 코딩하는 습관을 들이자.&lt;/li&gt;
&lt;li&gt;말을 잘 할 수 있도록 평소에 발표를 연습해야겠다.&lt;/li&gt;
&lt;li&gt;어떤 일을 하다보니 생활 리듬이 깨지는 경우가 있는데 이를 주의해야겠다.&lt;/li&gt;
&lt;li&gt;하루에 조금씩이라도 운동하는 습관을 들이거나 주말에 어떤 스포츠 배워야겠다는 생각을 했다. 장기적으로 보았을 때 스트레스 관리를 잘 하는 것이 멀리 갈 수 있는 방법일 것이다.&lt;/li&gt;
&lt;li&gt;코딩 테스트를 풀 때 다양한 예외 사항 및 제약 조건을 미리 생각해야하는데 다양한 예외 케이스에 대한 고려를 더 잘하려고 노력해야할 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;affimation-자기-선언&#34;&gt;Affimation (자기 선언)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;코드를 커밋하기 전에, 오타는 없는지 꼼꼼히 확인하자.&lt;/li&gt;
&lt;li&gt;다른 사람들 앞에서 내가 알고 있는 내용을 설명하자.&lt;/li&gt;
&lt;li&gt;보안도 애플리케이션의 한 요소라고 생각하고 열심히 공부하자.&lt;/li&gt;
&lt;li&gt;토이프로젝트를 잘 진행하고 계속 유지보수를 하면서 발전시켜나가자.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>주간 회고</title>
      <link>https://dongwooklee96.github.io/post/2021/03/14/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sun, 14 Mar 2021 20:20:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/03/14/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>&lt;h1 id=&#34;주간-회고&#34;&gt;주간 회고&lt;/h1&gt;
&lt;p&gt;이번주에 있던 일들을 종합해서 회고를 해보고 정리를 해보았습니다.&lt;/p&gt;
&lt;h1 id=&#34;커뮤니케이션-및-협업-능력&#34;&gt;커뮤니케이션 및 협업 능력&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;업무를 할 때, 상황 설명 및 커뮤니케이션을 조리있게 하지 못하고 이로 인해서 협업에 여려움을 느끼고 있었다. 어떻게 하면 내가 말을 좀 더 조리있게 잘하고 다른 사람들이 이해할 수 있을까라는 고민을 하던 중에, 다음과 같은 프레임워크를 알게 되었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Situation,_task,_action,_result&#34;&gt;Situation, task, action, result&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;쉽게 말하면서 어떤 상황 및 이야기를 할 때, 다음과 같은 순서에 따라서 말을 하는 것이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;S&lt;/strong&gt;ituation: 어떠한 상황에서&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;T&lt;/strong&gt;ask: 어떤 업무(Task) 하거나 또는 목표(target)를 달성해야 했는지.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;ction: 그래서 본인이 왜, 무엇을, 어떻게 했으며&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;esult: 결과는 어땠는지, 그 결과로 얻은 성과는? 또는 실패했다면 그로부터 배운것&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/111066661-7d637c00-8503-11eb-88f3-1cc486a963e6.png&#34; alt=&#34;STAR&#34;&gt;&lt;/p&gt;
&lt;p&gt;원래는 면접관이 직무에 필요한 특정 능력에 대한 모든 관련 정보를 수집하기 위한 방법이지만, 내가 했던 작업 및 상황 설명을 할 때, 이에 맞춰서 말을 하다보면 보다 상대방이 내가 무슨 이야기를 하는지 이해하기 쉬울 것이다.&lt;/p&gt;
&lt;p&gt;이제부터 작성하는 회고부터 &lt;strong&gt;STAR&lt;/strong&gt; 프레임워크에 맞춰 글을 작성하려는 노력을 해야겠다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/111066795-31fd9d80-8504-11eb-9d50-b64839651a6f.jpg&#34; alt=&#34;8997383833_2&#34;&gt;&lt;/p&gt;
&lt;p&gt;그리고 추가적으로 대화법에 대한 책을 읽으면서 나의 대화법에 잘못된 부분이 없는지 살펴보고 개선하도록 해야겠다. 아침마다 조금씩 읽으면서 대화법을 조금씩 개선해나갈 생각이다.&lt;/p&gt;
&lt;h1 id=&#34;코딩하기-전에-미리-설계하기&#34;&gt;코딩하기 전에 미리 설계하기&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;어떤 일을 처리할 때, 코드 레벨에서부터 분석하는 자세가 잘못된 것 같다. 우선 어떤 방향으로 가야할지, 동료들과 토의를 한 다음에, 그리고 현재 작업하는 프로젝트를 가장 잘 아는 사람에게 검토를 받는것이 일을 하는데 들이는 시간을 많이 줄여준다는 것을 알게 되었다.
처음에 잘못된 설계를 한 것을 발견하여 여태까지 코딩한 작업들이 모두 물거품이 되었는데 이러한 일을 최소화 하려면 잦은 토의와 어떠한 방향이 더 나은 방향인지를 끊임없이 고민하는 것이 정답인 것 같다.&lt;/p&gt;
&lt;h1 id=&#34;실수를-인정하기&#34;&gt;실수를 인정하기&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;내가 나의 실수를 인정하지 못하고 다른 사람이 잘했던 일을 쉽게 칭찬하지 못하는 단점을 발견했다. 내가 무슨 잘못이나 실수를 했을 때, 피하고만 싶어하는 이유를 좀 더 살펴보고 어떤 말을 하기 전에 생각을 좀 더 오래 한다음에 말을 하도록 하는 연습을 해야겠다.
이번주에 같은 기능을 개발하는 것이지만, 나는 변경 사항이 많고 수정할 부분이 많게 코딩을 하였지만 같은 동료는 변경사항을 최소한으로 하고 기존에 동작하던 부분을 최대한 건드리지 않고 코딩을 하는 방식으로 하였다. 이러한 부분은 칭찬을 할 만 하고 내가 여태까지 작업했던 시간보다 훨씬 적은 시간으로 기능이 완성되었을 뿐 만 아니라 사이드 이펙트에 대한 부분도 고려하지 않아도 될 것이다.
또한 코딩을 할 때, 코드만 볼 것이 아니라 전체적인 상황, 문맥을 고려하여 개발하는 자세를 가져야겠다.
내가 개선할 점은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;실수를 했을 때, 숨기고 싶어하는 경향이 있다. 이러한 점을 고쳐야겠다.&lt;/li&gt;
&lt;li&gt;코드레벨부터 보려고 하지 말고 먼저 왜 이러한 기능이 필요한지에 대한 상황을 파악하고, 그 다음에 전체적인 기능, 그리고 어떻게 구현하면 좋을지 생각을 하고 그 다음에 코드레벨에서 어떻게 구현할지 생각을 해야겠다.&lt;/li&gt;
&lt;li&gt;기존의 소스코드를 의심하기 전에, &lt;code&gt;URS&lt;/code&gt; 문서를 보면서 스펙에 이러한 기능이 존재하는지 먼저 파악을 하자.&lt;/li&gt;
&lt;li&gt;업무를 하는데, 도메인 지식이 사실 코딩 지식보다 중요할 수 있다는 사실을 깨달았다. 따라서 도메인 부터 제대로 파악하기 위해서 노력하자. 짜투리 시간이 날때마다 도메인 지식을 익히기 위해서 노력하고 이를 구글 &lt;code&gt;KEEP&lt;/code&gt;을 이용해서 키워드 별로 정리를 해야겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;중요한-결정은-최대한-나중에&#34;&gt;중요한 결정은 최대한 나중에&amp;hellip;&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/111067099-db915e80-8505-11eb-8a57-abb936bd0edd.png&#34; alt=&#34;110481786-479d4c80-812b-11eb-9297-6c700c1b528c&#34;&gt;&lt;/p&gt;
&lt;p&gt;잘못된 설계를 하지 않는 방법에 대한 고민을 하였고 트레이너 분들에게 질문을 하였을 때, 기계인간 님은 처음부터 다시 만들 생각을 하고 만든다고 하셨다.&lt;/p&gt;
&lt;p&gt;또한 중요한 결정을 최대한 나중으로 미룰 수 있는 것이 좋다고 하셨다. 왜냐하면 중요한 결정을 성급하게 내리고 나중에 실수를 했다는 것을 깨달아 버리면 그때는 다시 만들어야하기 때문이다.&lt;/p&gt;
&lt;h1 id=&#34;코드숨&#34;&gt;코드숨&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;이번주에는 업무적으로 바쁘기도 했고, 컨디션도 별로 안좋았는데, 회사에서 안좋은일까지 겹쳤다. 따라서 과제를 수행하기 어려웠는데, 컨디션을 위해서 한 주만 쉬자라는 마음으로 자기합리화를 했다. 사실 다음주가 마감일이라서 가장 바쁘기는 하겠지만 그래도 최대한 짜투리 시간을 활용해서라도 과제를 마무리 할 것이다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>주간 회고</title>
      <link>https://dongwooklee96.github.io/post/2021/02/28/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sun, 28 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/02/28/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>&lt;h1 id=&#34;주간-회고&#34;&gt;주간 회고&lt;/h1&gt;
&lt;p&gt;이번주에 있던 일들을 종합해서 회고를 해보고 정리를 해보았습니다.&lt;/p&gt;
&lt;h4 id=&#34;출근-방식의-변화&#34;&gt;출근 방식의 변화&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;이번주에는 새벽까지 할 일을 하고 아침에 늦게 출근하느 방식에서 벗어나 차라리 일찍 일어나서 일찍 출근하고 일찍 취침하는 방식을 택했다. 무엇보다 마음에 드는 것은 활용할 수 있는 시간이 훨씬 많아진 것이다. 새벽에 출근을 하니까 교통이 막히자 않아서 전에는 버스를 타고 1시간 20분 걸리던 거리가 40분 만에 도착할 수 있었다. 그리고 남는 시간에 개인적인 공부를 하니 시간 확보를 하는데 많은 도움이 되었다.
또한 회사에서 회식을 하더라도, 끝까지 가지 말고 아홉시나 열시쯤에는 헤어져서 집에 가야지 생활 패턴을 유지할 수 있을 것이다.&lt;/p&gt;
&lt;h4 id=&#34;테스트-코드&#34;&gt;테스트 코드&lt;/h4&gt;
&lt;hr&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/anH8Y8vAz2Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;빌 에반스가 성공한 사람들은 놀랍게도 어떤일을 잘하기 위해서 현실적인 관점을 가지고 접근한다고 했는데, 나 역시 추상적으로 코딩을 잘해야지 보다는 테스트 코드를 작성하면서 코드의 구조를 깔끔하게 만든다던지, 객체간의 의존성을 줄여야지 같은 현실적은 방법을 생각하기로 하였고, 현재 우선적으로 실력을 늘리기 위해서 생각한 방법은 테스트 코드를 먼저 작성하면서 내가 어떻게 코드를 만들어갈지를 생각하는 것이다.&lt;/p&gt;
&lt;h4 id=&#34;코드-숨&#34;&gt;코드 숨&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;코드 숨 강의를 들으면서, 도메인 객체를 외부와 소통하는 용도로 사용하는 것이 아니라, 외부랑 소통하는 용도의 새로운 객체를 만들어서 이를 이용해서 통신을 하는 것을 배울 수 있었다.
또한 이를 더욱 편리하게 하기 위해서, 맵퍼를 사용하는데 &lt;code&gt;DozerMapper&lt;/code&gt;라는 것을 사용해서 객체간의 변환을 쉽게 하는 방법에 대해서 배울 수 있었다.
그리고 예외 처리를 어디서 해야 좋을지에 대한 이야기를 해주셨는데, 꼭 컨트롤러에서 해주어야한다는 고정 관념을 가질 필요가 없고, 핵심은 서비스/컨트롤러 입장에서 외부에 공개되어야 하는 예외 상황이란 무엇이며 외부에 알리지 않고 조용히 처리할 예외는 무엇인지를 적절하게 구분하고 사용하는 것이 중요하다라는 사실을 알게 되었다.&lt;/p&gt;
&lt;h4 id=&#34;경력-관리&#34;&gt;경력 관리&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109415964-f1c7f680-79fe-11eb-870e-53947fa7dfc8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;저번주에, 네이버 채용공고를 작성해보면서 내가 어떤 부분이 부족한지 생각을 해보는 시간을 가지고 실제로 제출까지 해봤다. 서류 합격을 기대하지는 않았지만 놀랍게도 합격을 해서 코딩 테스트를 보라고 메일이 왔다. 하지만 평소에 코딩 테스트를 준비한 적이 없어서 코딩 테스트를 보기 조금은 막막 했다. 이를 통해서 준비를 평소에 해야지 기회를 잡는 다는 사실을 다시 한번 깨닫게 되었다. 따라서 현재 이직할 마음이 별로 없더라도, 코딩 테스트 및 이직 준비는 꾸준하게 해두어야겠다는 생각이 들었다. 그리고 지금부터라도 공부한 내용들을 모두 기술 블로그에 정리를 해야겠다는 생각을 했고 여태까지 공부한 내용들도 깃허브 및 블로그로 옮겨야겠다.&lt;/p&gt;
&lt;h4 id=&#34;pr을-날릴-때는-코드에-대한-명확한-이유와-설명&#34;&gt;PR을 날릴 때는 코드에 대한 명확한 이유와 설명&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109415477-4e75e200-79fc-11eb-8ec8-9b5e5f496d4c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;코드숨에서 PR을 날릴 때, 잘 짜여진 연극이라고 생각할지는 모르겠지만, 현재 사용하고 있는 라이브러나 코드를 사용한 이슈를 남에게 설득 시키려는 것 처럼 글을 작성하라고 하셨는데, 곰곰히 생각해보니 회사에서 내가 새롭게 추가하려는 라이브러리에 대한 정확한 설명없이 내가 도입을 하려고 했던 적이 많은 것 같다. 따라서 앞으로 코드를 작성하고 PR을 날릴 일이 있으면 내가 코드를 이렇게 작성한 이유 및 만약 라이브러리를 도입하려고 한다면 도입하려는 이유 및 도입했을 때 장점 같은 것을 상세하게 적어 동료들을 설득 시킬 수 있어야 된다는 것을 알게 되었다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;스트레스-관리&#34;&gt;스트레스 관리&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;이번주에 팀장님이랑 매월마다 진행하는 면담을 실시 했는데, 팀원 분들이 나를 많이 걱정 해주신다는 사실을 알게 되었다. 최근에 팀원분들이 내가 많이 스트레스를 받아하는 것 같다고 하셨는데, 실제로 이번주에 스트레스를 많이 받기는 했지만 그게 다른 사람들이 눈치를 챌 정도인건 정말로 몰랐다. 따라서 스트레스를 해소할 수 있는 취미나 운동을 해보는게 어떻겠냐고 물어보셨다. 나도 그 부분에 어느정도 동의를 하였고 따라서 회사에서 받은 스트레스를 해소할 수 있는 취미나 운동을 알아봐야겠다.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
