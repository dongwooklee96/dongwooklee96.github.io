<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>문서화 on 개발자 이동욱</title>
    <link>https://dongwooklee96.github.io/tags/%EB%AC%B8%EC%84%9C%ED%99%94.html</link>
    <description>Recent content in 문서화 on 개발자 이동욱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Wed, 03 Aug 2022 09:29:39 +0900</lastBuildDate><atom:link href="https://dongwooklee96.github.io/tags/%EB%AC%B8%EC%84%9C%ED%99%94/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>개발자의 글쓰기는 다르다는 글을 읽고나서 적은 생각</title>
      <link>https://dongwooklee96.github.io/post/2022/08/03/%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EA%B8%80%EC%93%B0%EA%B8%B0%EB%8A%94-%EB%8B%A4%EB%A5%B4%EB%8B%A4%EB%8A%94-%EA%B8%80%EC%9D%84-%EC%9D%BD%EA%B3%A0%EB%82%98%EC%84%9C-%EC%A0%81%EC%9D%80-%EC%83%9D%EA%B0%81.html</link>
      <pubDate>Wed, 03 Aug 2022 09:29:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2022/08/03/%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EA%B8%80%EC%93%B0%EA%B8%B0%EB%8A%94-%EB%8B%A4%EB%A5%B4%EB%8B%A4%EB%8A%94-%EA%B8%80%EC%9D%84-%EC%9D%BD%EA%B3%A0%EB%82%98%EC%84%9C-%EC%A0%81%EC%9D%80-%EC%83%9D%EA%B0%81.html</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;요즘 나도 글쓰기가 정말로 중요하다는 생각이 들었다. 그러던 와중에 해당 글을 읽고나서 많은 것을 느끼게 되었다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;업무를 하면서 글쓰기가 정말로 중요하다는 것을 느끼고 있었는데, 최근에 오픈 소스 개발을 하면서 이메일을 작성할 일이 많은데 나의 상황을 논리적으로 설명을 못하는 것 같아 더욱 뼈저리게 느끼고 있는 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;이를 위해서 글또라는 매주 기술 블로그 글을 작성하는 동아리까지 가입했는데 바쁘다는 핑계로 요즘 글도 잘 안적고 있는 것 같아서 반성을 하게 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;사실 요즘 글을 작성하지 않는 것은 요즘 개인적인 공부를 하지 않고 있기 때문인 것 같기도 하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;오픈 소스 개발을 하면서 느낀점을 적는 것도 유의미 하다는 것을 알지만, 너무 시간이 많이 소요될 것 같아서 미루고 있다. 하지만 막상 생각했던 것과는 달리 생산성이 더욱 향상될지는 모르겠다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;최근에-어떤-신입분과-같이-일을-하게-되었다&#34;&gt;최근에 어떤 신입분과 같이 일을 하게 되었다&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;사실 그전에는 거의 혼자 작업하는 일이 많아서 그런지 문서화의 중요성을 알긴 했지만 와닿지는 않았다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;나름 나중에 프로젝트를 이어받거나 같이 할 사람을 위해서 커밋 메시지 작성이나 이슈 관리를 잘 했다고 생각했지만 지금 다시 보니 여전히 부족하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;따라서 개인적인 취향보다는 팀내에서 규칙을 만들어서 컨벤션을 정하는 것이 중요할 것 같다는 생각을 했다. 또한 회사에서는 깃랩을 사용하는데 PR TEMPLATE이 있는지는 모르겠지만 도입하면 좋을 것 같다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;예시&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Feature / BugFix 등등] 변경점 요약

- What. 무엇을 바꿨는가
- How. 어떻게 바꿨는가
- (Optional) 주의할 사항, 신경쓸 사항
  - ex) client 측에서 사용하는 api 응답값 변경
- (Otpional) 참고사항
  - ex) wiki, jira link
  - ex) 관련 reference
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;좋은-변수명을-짓는-방법&#34;&gt;좋은 변수명을 짓는 방법&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;이 글에서 좋은 변수명을 적는 방법에 대해서 나왔는데 참고하면 좋을 것 같아서 적어본다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. 검색하기 쉽게 (easy to searh)
2. 조합하기 쉽게 (easy to mix)
3. 수긍하기 쉽게 (easy to agree)
4. 기억하기 쉽게 (easy to remember)
5. 입력하기 쉽게 (easy to type)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;내가-작성하려는-글이-어떤-성격인지를-파악하자&#34;&gt;내가 작성하려는 글이 어떤 성격인지를 파악하자&lt;/h3&gt;
&lt;hr&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;내용&lt;/th&gt;
          &lt;th&gt;종류&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;저&lt;/td&gt;
          &lt;td&gt;직접 경험하고 실험한 과정이나 결과&lt;/td&gt;
          &lt;td&gt;개발기, 도입기, 적용기&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;술&lt;/td&gt;
          &lt;td&gt;어떤 것을 분석하여 의미를 풀이하고 해것한 것&lt;/td&gt;
          &lt;td&gt;기술 소개, 용어 분석, 에러 해결 방법&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;편&lt;/td&gt;
          &lt;td&gt;산만하고 복잡한 자료를 편집해서 질서를 부여한 것&lt;/td&gt;
          &lt;td&gt;프로그램 설치, 설정 방법, 튜토리얼, 세미나 후기, 책 리뷰&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;집&lt;/td&gt;
          &lt;td&gt;여러 사람의 견해나 흩어진 자료를 한데 모아 정리한 것&lt;/td&gt;
          &lt;td&gt;명령어 모음, 팁, OO가지 규칙&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;다음은 기술 글쓰기의 종류인데 내가 지금 쓰려는 글일 어떤 종류의 글인지를 파악하고 적으면 좋을 것 같아서 발췌해서 적어본다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;개발자와-기획&#34;&gt;개발자와 기획&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;개발자도 기획을 어느정도 해야한다는 대목을 읽고나서 많이 공감을 했다. 사실 나는 개발자로 일하고 있기는 하지만, 기획자로 일해보고 싶은 마음도 있고 디자이너로 일하고 싶은 마음도 있는 상태이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;여기서 말하는 기획은 기술적인 문제에 대해서 제안을 하고 설득을 하기 위해서 기획을 어느정도 알아야 된다고 말하고 있지만 나는 언젠가는 기획자로 일을 해보고 싶다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;기획의 신이라는 책에서는 기획의 핵심 기술을 아래 내용으로 설명을 한다고 했다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1. 기획의 목적 -&amp;gt; WHY
2. 기획안의 본론, 발견한 문제에 대한 해결책이 구체화되는 단계 -&amp;gt; WHAT
3. 세부적인 실행 계획을 제시하는 단계 -&amp;gt; HOW
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;내가 개발하려는 기능의 목적과 어떻게 해결하면 좋을지 기획자의 시건에서 생각을 해볼 필요도 있을 것 같고, 무엇보다 사용자 입장에서 정말로 원하는 기능일까를 많이 생각을 해봐야겠다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.gmarket.com/30&#34;&gt;개발자의 글쓰기는 다르다&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>문서화를 코드로 관리하는 법 (draft)</title>
      <link>https://dongwooklee96.github.io/post/2021/04/13/%EB%AC%B8%EC%84%9C%ED%99%94%EB%A5%BC-%EC%BD%94%EB%93%9C%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B2%95-draft.html</link>
      <pubDate>Tue, 13 Apr 2021 15:47:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/04/13/%EB%AC%B8%EC%84%9C%ED%99%94%EB%A5%BC-%EC%BD%94%EB%93%9C%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B2%95-draft.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/114509642-b745b080-9c70-11eb-95f6-f5083a8b8f5e.jpg&#34; alt=&#34;images&#34;&gt;&lt;/p&gt;
&lt;p&gt;이전에 프로젝트를 진행할 때는 문서화에 대한 고민이 정말로 많았다. 왜냐하면 요구사항은 나날이 변경되는데, 요구사항에 맞춰서 문서화를 변경하는 일은 손이 많이가고 귀찮은 일이었기 때문이다. 또한 변경사항이 변경할 때마다, 어느 부분을 어떤 이유로 수정하였는지 추적하기도 힘이 들었다.&lt;/p&gt;
&lt;p&gt;따라서 추후에 프로젝트를 다시 시작할 때 무조건 문서화를 코드에 가깝게 두려고 노력을 했다. 또한 깃으로 상태 관리를 할 수 있었으면 좋겠다는 생각을 하기도 하였다. 그러던 중에, &lt;code&gt;plantuml&lt;/code&gt; 이라는 도구를 알게 되었다. 이 도구는 아키텍처를 도식화할 때 사용할 수 있는 툴로써 다양한 다이어그램을 그릴 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://plantuml.com/ko/&#34;&gt;Plantuml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kroki.io/&#34;&gt;Kroki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>테크니컬 라이팅 4대 원칙이라는 글을 읽고 느낀점</title>
      <link>https://dongwooklee96.github.io/post/2021/03/04/%ED%85%8C%ED%81%AC%EB%8B%88%EC%BB%AC-%EB%9D%BC%EC%9D%B4%ED%8C%85-4%EB%8C%80-%EC%9B%90%EC%B9%99%EC%9D%B4%EB%9D%BC%EB%8A%94-%EA%B8%80%EC%9D%84-%EC%9D%BD%EA%B3%A0-%EB%8A%90%EB%82%80%EC%A0%90.html</link>
      <pubDate>Thu, 04 Mar 2021 18:29:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/03/04/%ED%85%8C%ED%81%AC%EB%8B%88%EC%BB%AC-%EB%9D%BC%EC%9D%B4%ED%8C%85-4%EB%8C%80-%EC%9B%90%EC%B9%99%EC%9D%B4%EB%9D%BC%EB%8A%94-%EA%B8%80%EC%9D%84-%EC%9D%BD%EA%B3%A0-%EB%8A%90%EB%82%80%EC%A0%90.html</guid>
      <description>&lt;h3 id=&#34;테스트-코드-및-메서드-주석에-대한-고민&#34;&gt;테스트 코드 및 메서드 주석에 대한 고민&lt;/h3&gt;
&lt;p&gt;코드를 작성하면서 테스트 코드에 어떤 테스트라는 것을 어떻게 명확하게 표현할까, 그리고 모듈 및 클래스, 메서드 주석을 달면서 어떻게 작성해야 좋은 문서가 될까? 라는 고민을 하고 작성하였지만 여전히 어렵기만 했다. 그런던 중에서 카카오 기술 블로그에서 도움이 될 만한 글을 발견하였다.&lt;/p&gt;
&lt;h4 id=&#34;테크닐컬-라이팅의-4대-원칙&#34;&gt;테크닐컬 라이팅의 4대 원칙&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109958056-21da0700-7d29-11eb-8f4f-779e11801b92.png&#34; alt=&#34;img1 daumcdn&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;명확성&#34;&gt;명확성&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;테크니컬 라이팅의 첫 번째 원칙은 명확성이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;명확성이란 핵심어나 핵심 문장이 모호하게 사용되지 않고, 대상 독자가 기술 문서를 읽을 때, 내용의 모호함이나 혼란 없이 한번에 이해하도록 하는 글이다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;어떤 문서를 읽을 때, 독자 입장에서 이해가 가지 않아 특정 부분을 몇 번이고 다시 읽게 된다면, 이는 명확성이 떨어지는 글이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;명확성이 떨어지는 이유는 대부분의 경우 대상 독자를 제대로 파악하지 못해서 발생한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;개발자라면 모두 아는 내용인데 적어야할까?&amp;rdquo; 라는 의문이 생기더라도 모두 적어야한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;개발자들이라면 다 안다&amp;quot;라는 생각은 굉장히 주관적일 수 있기 때문이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;대학생들이나 외부의 초급 개발자들도 쉽게 따라 할 수 있을 정도의 상세한 문서여야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109959088-6023f600-7d2a-11eb-9a7f-cfb1012115e6.png&#34; alt=&#34;Screen Shot 2021-03-04 at 8 44 05 PM&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;간결성&#34;&gt;간결성&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;간결성이란 특정 독자가 기술적인 내용을 신속하고 정확하게 이해할 수 있도록 미사여구나 감탄사 등을 사용하지 않고, 쉬운 단어와 간결한 문장을 사용하는 것이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;문장을 길고 복잡하게 복문으로 써야 더 있어보이고, 더 많은 정보를 담게 될 것이라는 생각은 금물이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;기술 문서에서는 &amp;ldquo;~는 ~입니다.&amp;rdquo; 라는 형식의 단문을 사용할 때 더욱 명확하고 가독성이 높은 글을 작성할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109959559-040da180-7d2b-11eb-8d7a-a0ad03e6e701.png&#34; alt=&#34;img1 daumcdn&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109959668-2a334180-7d2b-11eb-924d-1945a49faf98.png&#34; alt=&#34;Screen Shot 2021-03-04 at 8 49 40 PM&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;정확성&#34;&gt;정확성&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;독자가 필요로 하는 정보를 기술적 오류 없이 정확하게 제공하는 것을 말한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;명확성과, 간결성이 떨어지지만 정확성이 확보된 기술문서라면, 독자들은 시간이 많이 걸린다고 해도 해당 문서를 이해할 수 있지만 반대의 경우에는 잘못된 정보를 전달하게 된다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109959933-7da58f80-7d2b-11eb-9144-7ca86c041707.png&#34; alt=&#34;Screen Shot 2021-03-04 at 8 51 58 PM&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;일관성&#34;&gt;일관성&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;문서에 용어, 표현, 그리고 어조 등을 일관성 있게 사용하는 것이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;특히 한번 언급된 단어를 다른 방식으로 언급하는 것은 독자에게 큰 혼란을 줄 수 있고, 결과적으로 문서의 신뢰도와 가독성이 저하된다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;정리&#34;&gt;정리&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;짧게 써라&amp;quot;라고 시작하는 문장은 테크니컬 라이팅 대 원칙중 &amp;ldquo;간결성&amp;quot;을 &amp;ldquo;명료하게 써라&amp;quot;는 &amp;ldquo;명확성에 해당한다&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;ldquo;그림처럼 써라&amp;quot;라는 문장은 독자가 어떤 시스템이나 기능의 아키텍처를 보다 쉽게 이해할 수 있도록 논리적으로 기술하거나 개발 시나리오나 개발 흐름 등의 시각 자료를 활용하는 것이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.kakaoenterprise.com/102&#34;&gt;테크니컬 라이팅 4대 원칙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
