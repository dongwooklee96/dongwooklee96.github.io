<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>면접 on 개발자 이동욱</title>
    <link>https://dongwooklee96.github.io/tags/%EB%A9%B4%EC%A0%91/</link>
    <description>Recent content in 면접 on 개발자 이동욱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Wed, 03 Mar 2021 21:49:39 +0900</lastBuildDate><atom:link href="https://dongwooklee96.github.io/tags/%EB%A9%B4%EC%A0%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>라인 개발자 입사기를 읽고 느낀점</title>
      <link>https://dongwooklee96.github.io/post/2021/03/03/%EB%9D%BC%EC%9D%B8-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9E%85%EC%82%AC%EA%B8%B0%EB%A5%BC-%EC%9D%BD%EA%B3%A0-%EB%8A%90%EB%82%80%EC%A0%90/</link>
      <pubDate>Wed, 03 Mar 2021 21:49:39 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/03/03/%EB%9D%BC%EC%9D%B8-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9E%85%EC%82%AC%EA%B8%B0%EB%A5%BC-%EC%9D%BD%EA%B3%A0-%EB%8A%90%EB%82%80%EC%A0%90/</guid>
      <description>&lt;h1 id=&#34;지원서-작성할-때-참고할-부분&#34;&gt;지원서 작성할 때, 참고할 부분&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109811374-1a095c80-7c6e-11eb-9077-d4d5a18b0768.png&#34; alt=&#34;Screen Shot 2021-03-03 at 10 16 05 PM&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;대외 활동을 했다는 사실 그 자체보다는 그 활동에서 배우고 얼마나 성장했는지를 위주로 적자&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;무엇을 했는지가 중요한 것이 아니다, 무엇을 얻었고, 배웠는지를 위주로 작성하자.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;어떤 활동을 하더라도, 자신의 성장을 연결하는 것이 중요하다, 자신의 성장을 감춰두고 혼자만 아는 것 보다는 어떠한 방식으로도 그것을 드러내서 어필하는 것이 중요하다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;신입-개발자가-아닌-경우&#34;&gt;신입 개발자가 아닌 경우&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109811905-bdf30800-7c6e-11eb-844c-0ec338e53c4f.png&#34; alt=&#34;Screen Shot 2021-03-03 at 10 20 14 PM&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스스로 공부해 왔던 내용과, 더불어 내가 어떤 개발자가 되고 싶은지 목표를 설정&lt;/li&gt;
&lt;li&gt;지금 근무하는 곳에서 책임감을 가지고 근무하는 모습이 중요하다.&lt;/li&gt;
&lt;li&gt;이직을 준비하더라도 현재 다니고 있는 직장에 집중하고 최선을 다하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;코딩-테스트-준비&#34;&gt;코딩 테스트 준비&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;선택한 하나의 알고리즘을 난이도 별로 풀어보았다.&lt;/li&gt;
&lt;li&gt;특히 구현, 자료구조 부분은 다른 문제와 연계되는 경우가 많아서 더욱 집중적으로 풀어보았다.&lt;/li&gt;
&lt;li&gt;채용을 준비할 때는 취업을 준비하기전에 풀었던 문제의 절반정도를 풀면서 연습을 했다.&lt;/li&gt;
&lt;li&gt;코딩 테스트라는 과정은 단기간에 실력을 올릴 수 없기 때문에, 매일 또는 매주 꾸준히 코딩 테스트 문제를 풀어보는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;처음 준비를 할 때는 알고리즘 공부를 위한 영상을 찾고, 해당 영상을 들으면서 그날 배웠던 알고리즘과 관련된 문제를 2~3개 정도 풀면서 준비를 했다.&lt;/li&gt;
&lt;li&gt;꾸준히 흥미를 붙여가면서 하는것이 중요하다.&lt;/li&gt;
&lt;li&gt;단기간에 바짝 공부해서 관련 내용을 익히고 문제 풀이 능력을 성장시키는 것보다는, 꾸준하게 문제의 유형과 풀이의 방식을 익히면서 체득하는 것이 많은 도움이 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;서류-제출과-관련된-팁&#34;&gt;서류 제출과 관련된 팁!&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;나 자신을 잘 아는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;&amp;lsquo;나&amp;rsquo;를 알아야 어필할 수 있는 포인트도 보이고, 나에게 잘 맞는 직무도 찾을 수 있다.&lt;/li&gt;
&lt;li&gt;내가 지금까지 활동했던 것을 정리해보는 것을 추천한다.&lt;/li&gt;
&lt;li&gt;어떤 경험을 했고, 어떤 일이 일어났고, 어떤 것을 배우고 얻었는지를 중점으로 작성해보는 것이다.&lt;/li&gt;
&lt;li&gt;그리고 나서 지원할 직무와 연결지어서 어떤 경험들을 추려낼지 고민하면서 서류를 작성하면 조금 더 쉬워질 것이다.&lt;/li&gt;
&lt;li&gt;내가 흥미를 느끼는 분야와 기술, 그리고 쌓아온 역량을 직무와 연결지어서 생각해보면 좋을 것이다.&lt;/li&gt;
&lt;li&gt;포트폴리오의 경우에는 진행 했던 프로젝트의 전체 구조와 내가 맡았던 역할, 사용한 기술을 중점으로 만들었다. 그리고 각각의 프로젝트에 해당하는 &lt;code&gt;Git Repository&lt;/code&gt;를 추가하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/14002238/109813328-8d13d280-7c70-11eb-9fc4-5fbb310702a4.png&#34; alt=&#34;Screen Shot 2021-03-03 at 10 33 50 PM&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;포트폴리오를 작성할 때는, &lt;code&gt;문제 발생 - 문제 원인 파악 - 해결책 적용 - 결과&lt;/code&gt; 와 같은 순서로 프로젝트 문제 해결 과정을 서술 하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;이 부분에 공감을 하는데, 포트폴리오에서 내가 보여줘야할 것은 내가 얼마만큼 알고 할 수 있는 능력이 있는지 보다는, 내가 어떤 분야를 얼마만큼 고민했다는 사실을 어필하는 것이 더 효과적일 것이다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;포트폴리오에서는 자신의 개발 역량이나 팀으로 활동할 때의 자신의 모습을 보여줄 수 있는 것 등 자기소개서에서 드러내지 못한 부분을 보여주면 좋을 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;면접을-위해서-따로-준비한-것들&#34;&gt;면접을 위해서 따로 준비한 것들&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;CS(Computer Science) 지식과 프로젝트에서 사용한 기술들을 다시 한 번 정리하였다.&lt;/li&gt;
&lt;li&gt;운영체제, 데이터베이스, 자료구조/알고리즘, 네트워크에 대해서 정리를 하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;되도록 공식 개발 문서를 레퍼런스로 하여, CS 지식들을 틈틈히 정리하도록 해야겠다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;프로젝트에서 사용한 기술은 왜 그 기술을 사용했고, 어떤 장/단점을 가지고 있으며, 어떤한 원리로 동작하는지를 중점으로 준비하였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;나의 포트폴리오에서 보완해야할 점이다. 왜 그 기술을 사용했는지, 그리고 어떤 장/단점을 가지고 있는지, 어떠한 원리로 동작하는지 고민을 많이하지 않았다.따라서 이러한 부분을 개선하자.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;다른 사람들에게 자신의 포트폴리오를 보여주고 피드백을 얻는 것도 좋은 방법이 될 것이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;면접을 위해서는 자기소개서와 포트폴리오를 다시 확인하면서 예상 질문을 확인하였고, 또한 블로그에 포스팅한 내용들을 공부하며 범위를 넓혔다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;면접을 보기 전에, 친구들과 모의 면접을 보거나 휴대폰으로 답변하는 모습을 촬영하면서 준비하였다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;답변할 때는 스스로 어필하고 싶거나 강조하고 싶은 점에 대해서는 톤을 달리하고, 시선 처리는 한곳만 바라보거나 허공을 바라보지 않게 면접관들을 번갈아 볼 수 있게 준비하였다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;답변할 수 있는 것은 자신있게 답변하고, 모르는 것은 모른다고 답하되 보완할 방법이나 알고 있는 비슷한 개념을 엮어 답변을 할 수 있도록 준비해라&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;자신이 제출한 자기소개서, 이력서, 포트폴리오를 2 ~ 3번 정독하고 면접관들이 어떤 부분에서 궁금할지를 예측하여 자문자답하면서 내용을 정리&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;면접은 &amp;lsquo;어떻게&amp;rsquo;보다 &amp;lsquo;왜&amp;rsquo;라는 질문을 받았을 때 제대로 답변할 수 있도록 준비를 하면 좋을 것이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;대답을 못한다고 감점은 없다, 따라서 모르면 모른다고 답변을 하고 모든 것을 후회없이 보여줄 수 있도록 준비를 하자.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;결론&#34;&gt;결론&lt;/h1&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;코딩 테스트 준비를 꾸준히 하자.&lt;/li&gt;
&lt;li&gt;컴퓨터 공학 관련 지식들을 꾸준히 리마인드 하고, 블로그에 잘 정리를 하자.&lt;/li&gt;
&lt;li&gt;포트폴리오는 왜 이러한 기술을 사용했고, 문제점, 및 문제를 해결한 과정이 잘 녹아들어 있어야 한다.&lt;/li&gt;
&lt;li&gt;면접은 &amp;lsquo;어떻게&amp;rsquo;보다는 &amp;lsquo;왜&amp;rsquo;라는 질문에 답을 할 수 있어야 한다.&lt;/li&gt;
&lt;li&gt;면접 질문 기반이 자기소개서 및 포트폴리오에서 나오므로 자기소개서 및 포트폴리오를 처음부터 잘 작성하자.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.linecorp.com/ko/blog/2020-first-half-new-liners-interview/&#34;&gt;2020 상반기 LINE 신입 개발자 3인의 WOW한 입사기!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>코딩 테스트 출제 경향 및 준비 방향</title>
      <link>https://dongwooklee96.github.io/post/2021/02/27/%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%B6%9C%EC%A0%9C-%EA%B2%BD%ED%96%A5-%EB%B0%8F-%EC%A4%80%EB%B9%84-%EB%B0%A9%ED%96%A5/</link>
      <pubDate>Sat, 27 Feb 2021 22:28:35 +0900</pubDate>
      
      <guid>https://dongwooklee96.github.io/post/2021/02/27/%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%B6%9C%EC%A0%9C-%EA%B2%BD%ED%96%A5-%EB%B0%8F-%EC%A4%80%EB%B9%84-%EB%B0%A9%ED%96%A5/</guid>
      <description>&lt;h1 id=&#34;최신-출제-경향과-준비-방향&#34;&gt;최신 출제 경향과 준비 방향&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;정확한 알고리즘을 사용하여 얼마나 빠르게 많은 문제를 풀었는지를 토대로 순위를 매긴다.&lt;/li&gt;
&lt;li&gt;기업은 코딩 테스트를 통해서 취업 준비생들에게 뛰어난 프로그래밍 실력을 원하는 것이 아니라, 기초 알고리즘에 기반하는 문제들이 출제된다.&lt;/li&gt;
&lt;li&gt;가장 출제 빈도가 높은 문제는 그리디, 구현(implementation), DFS/BFS를 활용한 탐색 문제이다.&lt;/li&gt;
&lt;li&gt;또한 상대적으로 높은 사고력을 요구하는 다이나믹 프로그래밍이나, 그래프 이론 문제도 출제된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음은 카카오 기술 블로그에 언급된 코딩 테스트 문제 난이도에 대한 내용이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ACM-ICPC 같은 어려운 알고리즘 설계 능력을 겨루는 문제가 아닌, 업무에서 있을만한 상황을 가정하여 독창적이고 다양한 분야의 문제를 출제했고 난이도 또한 비교적 쉬운 수준으로 조정하였습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;다양한 케이스를 고려해야 안정적으로 만점을 받을 수 있는 문제들이 주로 출제 된다.&lt;/li&gt;
&lt;li&gt;위와 같은 경우 테스트 코드를 활용하면 안정적으로 구현을 할 수 있을 것이다.&lt;/li&gt;
&lt;li&gt;시간이 촉박하기 때문에, 평상시 프로그램을 개발하거나 학교 과제용 문제 풀이에 비하면 심리적으로 부담이 되는 편이다.&lt;/li&gt;
&lt;li&gt;따라서 연습해두지 않으면 평소의 문제 해결 기량에 비하여 좋은 성과가 나오지 않을 수 있다.&lt;/li&gt;
&lt;li&gt;알고리즘 역량을 벗어나 REST API, JSON 등의 원리를 이해하고 있어야 풀 수 있는 문제들도 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;참고-문헌&#34;&gt;참고 문헌&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=247882118&#34;&gt;이것이 취업을 위한 코딩테스트다, 나동빈, 한빛미디어&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
