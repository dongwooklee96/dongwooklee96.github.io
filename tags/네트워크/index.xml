<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>네트워크 on 개발자 이동욱</title>
    <link>/tags/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/</link>
    <description>Recent content in 네트워크 on 개발자 이동욱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 20 Apr 2021 23:51:39 +0900</lastBuildDate>
    
	<atom:link href="/tags/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TCP 통신과정 추적해보기 (draft)</title>
      <link>/post/2021/04/20/tcp-%ED%86%B5%EC%8B%A0%EA%B3%BC%EC%A0%95-%EC%B6%94%EC%A0%81%ED%95%B4%EB%B3%B4%EA%B8%B0-draft/</link>
      <pubDate>Tue, 20 Apr 2021 23:51:39 +0900</pubDate>
      
      <guid>/post/2021/04/20/tcp-%ED%86%B5%EC%8B%A0%EA%B3%BC%EC%A0%95-%EC%B6%94%EC%A0%81%ED%95%B4%EB%B3%B4%EA%B8%B0-draft/</guid>
      <description>추적 과정  추적하기 전에 클라이언트와 서버 코드를 컴파일 한다.
client.c
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;sys/socket.h&amp;gt; #include &amp;lt;arpa/inet.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #define MAXLINE 1024 int main(int argc, char **argv) { struct sockaddr_in serveraddr; int server_sockfd; int client_len; char buf[MAXLINE]; if((server_sockfd = socket(AF_INET, SOCK_STREAM, 0)) == -1) { perror(&amp;quot;error : &amp;quot;); return 1; } serveraddr.sin_family = AF_INET; serveraddr.sin_addr.s_addr = inet_addr(&amp;quot;127.0.0.1&amp;quot;); serveraddr.sin_port = htons(4000); client_len = sizeof(serveraddr); if(connect(server_sockfd, (struct sockaddr*)&amp;amp;serveraddr, client_len) == -1) { perror(&amp;quot;connect error : &amp;quot;); return 1; } memset(buf, 0x00, MAXLINE); read(0, buf, MAXLINE); if(write(server_sockfd, buf, MAXLINE) &amp;lt;= 0) { perror(&amp;quot;write error : &amp;quot;); return 1; } memset(buf, 0x00, MAXLINE); if(read(server_sockfd, buf, MAXLINE) &amp;lt;= 0) { perror(&amp;quot;read error: &amp;quot;); return 1; } close(server_sockfd); printf(&amp;quot;server:%s\n&amp;quot;, buf); return 0; } server.</description>
    </item>
    
    <item>
      <title>TCP 통신에 대해서 알아보자...</title>
      <link>/post/2021/04/20/tcp-%ED%86%B5%EC%8B%A0%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90.../</link>
      <pubDate>Tue, 20 Apr 2021 23:01:39 +0900</pubDate>
      
      <guid>/post/2021/04/20/tcp-%ED%86%B5%EC%8B%A0%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90.../</guid>
      <description>TCP (Transmission Control Protocol)    TCP는 응용 프로그램이 데이터를 교환할 수 있는 네트워크 대화를 설정하고 유지하는 방법을 정의하는 표준이다.
  TCP는 IP 네트워크를 통해서 통신하는 호스트에서 실행되는 애플리케이션 간에 신뢰할 수 있고, 순서가 정해져있으며, 오류를 체크하고 전송할 수 있다.
  월드 와이드 웹, 이메일, 원격 관리, 파일 전송과 같은 주요 인터넷 애플리케이션은 전송 계층의 일부인 TCP에 의존한다.
  SSL/TLS 또한 TCP 위에서 동작한다.
  TCP는 인터넷 프로토콜 (IP)과 작동하여 컴퓨터가 서로 데이터 패킷을 보내는 방법을 정의한다.</description>
    </item>
    
    <item>
      <title>DNS란? (draft)</title>
      <link>/post/2021/04/13/dns%EB%9E%80-draft/</link>
      <pubDate>Tue, 13 Apr 2021 23:15:39 +0900</pubDate>
      
      <guid>/post/2021/04/13/dns%EB%9E%80-draft/</guid>
      <description>DNS(Domain Name System)  내가 활용중인 DNS IP 주소 확인하기   위의 명령어를 통해서, 내가 사용하고 있는 DNS 서버의 IP 주소를 알아낼 수 있다.   위에 명령어를 통해서 나온 주소를 구글에 검색하면, 어떤 DNS 서버를 사용하는지 대략적으로 알 수 있다.  DNS 동작과정 추적하기   위와 같은 과정을 통해서, DNS 서버에 요청하고, 도메인 주소를 통해서 IP 정보를 받아오는 것을 확인할 수 있다.  sudo systemd-resolve --flush-caches  DNS 캐시 정보를 지우고 싶다면 위의 명령어를 입력하면 된다.</description>
    </item>
    
    <item>
      <title>ARP란? (draft)</title>
      <link>/post/2021/04/13/arp%EB%9E%80-draft/</link>
      <pubDate>Tue, 13 Apr 2021 23:01:39 +0900</pubDate>
      
      <guid>/post/2021/04/13/arp%EB%9E%80-draft/</guid>
      <description>ARP(Address Resolution Protocol)   L2(데이터 링크 계층) 통신 프로토콜이다. IP 네트워크 주소를 데이터 링크 프로토콜에서 사용하는 하드웨어 주소(Mac ADDRESS)에 맵핑하기 위해서 사용하는 프로토콜이다.  arp -n 위의 명령어를 통해서, ARP 테이블을 확인할 수 있다.
ARP 패킷 추적하기   위의 명령어를 통해서, 패킷 추적을 시작한다. 그리고 MAC 주소를 확인하기 위해서 PING 명령어를 자신의 IP 주소로 보내며, 네트워크 패킷이 호출되는 것을 확인한다.   ffff:ffff:ffff는 목적지 주소를 나타내며, 브로드 캐스트의 의미이다.</description>
    </item>
    
    <item>
      <title>ICMP란 (draft)</title>
      <link>/post/2021/04/13/icmp%EB%9E%80-draft/</link>
      <pubDate>Tue, 13 Apr 2021 22:52:39 +0900</pubDate>
      
      <guid>/post/2021/04/13/icmp%EB%9E%80-draft/</guid>
      <description>ICMP(Internet Control Message Protocol)    L3(네트워크 계층) 통신 프로토콜로서, 라우터를 포함한 네트워크 장치가 다른 IP 주소와 통신을 할 때 성공 또는 실패를 나타내는 오류 메시지 및 운영정보를 보내는데 사용된다.
  흔히 사용하는 PING 명령어가 ICMP 프로토콜을 사용하고 있다.
  네트워크 패킷 추적하기 sudo apt-get install tshark  위의 명령어를 입력하여 tshark를 설치한다, 네트워크 패킷 분석을 할 수 있는 툴이다.   위의 명령어를 입력해서, ICMP 패킷을 분석을 시작한다.</description>
    </item>
    
    <item>
      <title>MAC 주소란 (draft)</title>
      <link>/post/2021/04/13/mac-%EC%A3%BC%EC%86%8C%EB%9E%80-draft/</link>
      <pubDate>Tue, 13 Apr 2021 22:21:39 +0900</pubDate>
      
      <guid>/post/2021/04/13/mac-%EC%A3%BC%EC%86%8C%EB%9E%80-draft/</guid>
      <description>MAC 주소란?  MAC 주소 알아내는 법   위의 명령어를 이용하면 사용하고 있는 하드웨어의 MAC 주소 및 네트워크 카드 ID, 제조사를 알아낼 수 있다.  참고 문헌  </description>
    </item>
    
    <item>
      <title>라우팅이란 (draft)</title>
      <link>/post/2021/04/13/%EB%9D%BC%EC%9A%B0%ED%8C%85%EC%9D%B4%EB%9E%80-draft/</link>
      <pubDate>Tue, 13 Apr 2021 22:20:48 +0900</pubDate>
      
      <guid>/post/2021/04/13/%EB%9D%BC%EC%9A%B0%ED%8C%85%EC%9D%B4%EB%9E%80-draft/</guid>
      <description>라우팅이란?   네트워크 패킷이 목적지를 찾아가기 위한, 최적의 경로이다.  요청한 서버까지 라우터를 추적하는 방법   구글 서버까지 굉장히 많은 라우터를 거쳐간다는 것을 확인할 수 있다. 네이버 서버에 요청하였을 때는 보안상의 이유로 라우터가 가려진 것을 확인할 수 있다. 모든 라우터의 주소를 확인할 수 있는 것은 아니다.  참고 문헌  </description>
    </item>
    
    <item>
      <title>웹 클라이언트(브라우저) 부터 웹서버까지의 구조 (draft)</title>
      <link>/post/2021/04/13/%EC%9B%B9-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%B6%80%ED%84%B0-%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B9%8C%EC%A7%80%EC%9D%98-%EA%B5%AC%EC%A1%B0-draft/</link>
      <pubDate>Tue, 13 Apr 2021 22:20:39 +0900</pubDate>
      
      <guid>/post/2021/04/13/%EC%9B%B9-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EB%B6%80%ED%84%B0-%EC%9B%B9%EC%84%9C%EB%B2%84%EA%B9%8C%EC%A7%80%EC%9D%98-%EA%B5%AC%EC%A1%B0-draft/</guid>
      <description> 브라우저에서 주소를 입력하면 HTTP 통신이 일어나게 되고, DNS 서버에서, 도메인 주소를 IP 주소로 변환하는 요청을 하게 된다. IP 주소를 알아내면, 라우터를 통해서 TCP / IP 통신을 하게 된다. 웹 서버에 도착했을 때는 최종적으로 HTTP 통신이 이루어지게 된다.  참고 문헌   리얼 리눅스  </description>
    </item>
    
  </channel>
</rss>