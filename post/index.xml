<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 개발자 이동욱</title>
    <link>/post/</link>
    <description>Recent content in Posts on 개발자 이동욱</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Sun, 28 Feb 2021 12:29:39 +0900</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>주간 회고</title>
      <link>/post/2021/02/28/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sun, 28 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/28/%EC%A3%BC%EA%B0%84-%ED%9A%8C%EA%B3%A0/</guid>
      <description>주간 회고 이번주에 있던 일들을 종합해서 회고를 해보고 정리를 해보았습니다.
출근 방식의 변화  이번주에는 새벽까지 할 일을 하고 아침에 늦게 출근하느 방식에서 벗어나 차라리 일찍 일어나서 일찍 출근하고 일찍 취침하는 방식을 택했다. 무엇보다 마음에 드는 것은 활용할 수 있는 시간이 훨씬 많아진 것이다. 새벽에 출근을 하니까 교통이 막히자 않아서 전에는 버스를 타고 1시간 20분 걸리던 거리가 40분 만에 도착할 수 있었다. 그리고 남는 시간에 개인적인 공부를 하니 시간 확보를 하는데 많은 도움이 되었다.</description>
    </item>
    
    <item>
      <title>개발자 채용 프로세스</title>
      <link>/post/2021/02/27/%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%B1%84%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4/</link>
      <pubDate>Sat, 27 Feb 2021 22:56:33 +0900</pubDate>
      
      <guid>/post/2021/02/27/%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%B1%84%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4/</guid>
      <description>개발자 채용 프로세스  개발자 채용 프로세스는 다음과 같다.
  서류 검토 코딩 테스트 기술 면접 인성 면접    코딩 테스트는 주로 알고리즘 문제를 출제하므로, 알고리즘을 열심히 공부하고 연습했다면 합격할 수 있다. 하지만 기술 면접에서는 알고리즘 외에도 컴퓨터구조, 운영체제 등 컴퓨터공학 전반에 대한 다양한 지식에 관해서 질문하므로 공부해야할 범위가 상당히 넓다. 또한 아무리 실력이 좋더라도 성실성과 팀원으로서 잘 어울릴 수 있는지 그리고 커뮤니케이션 능력 또한 무시할 수 없다.</description>
    </item>
    
    <item>
      <title>코딩 테스트 출제 경향 및 준비 방향</title>
      <link>/post/2021/02/27/%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%B6%9C%EC%A0%9C-%EA%B2%BD%ED%96%A5-%EB%B0%8F-%EC%A4%80%EB%B9%84-%EB%B0%A9%ED%96%A5/</link>
      <pubDate>Sat, 27 Feb 2021 22:28:35 +0900</pubDate>
      
      <guid>/post/2021/02/27/%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%B6%9C%EC%A0%9C-%EA%B2%BD%ED%96%A5-%EB%B0%8F-%EC%A4%80%EB%B9%84-%EB%B0%A9%ED%96%A5/</guid>
      <description>최신 출제 경향과 준비 방향  정확한 알고리즘을 사용하여 얼마나 빠르게 많은 문제를 풀었는지를 토대로 순위를 매긴다. 기업은 코딩 테스트를 통해서 취업 준비생들에게 뛰어난 프로그래밍 실력을 원하는 것이 아니라, 기초 알고리즘에 기반하는 문제들이 출제된다. 가장 출제 빈도가 높은 문제는 그리디, 구현(implementation), DFS/BFS를 활용한 탐색 문제이다. 또한 상대적으로 높은 사고력을 요구하는 다이나믹 프로그래밍이나, 그래프 이론 문제도 출제된다.  다음은 카카오 기술 블로그에 언급된 코딩 테스트 문제 난이도에 대한 내용이다.
 ACM-ICPC 같은 어려운 알고리즘 설계 능력을 겨루는 문제가 아닌, 업무에서 있을만한 상황을 가정하여 독창적이고 다양한 분야의 문제를 출제했고 난이도 또한 비교적 쉬운 수준으로 조정하였습니다.</description>
    </item>
    
    <item>
      <title>이것이 코딩 테스트다</title>
      <link>/post/2021/02/27/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4/</link>
      <pubDate>Sat, 27 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/27/%EC%9D%B4%EA%B2%83%EC%9D%B4-%EC%BD%94%EB%94%A9-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8B%A4/</guid>
      <description>내가 코딩 테스트를 준비하는 이유  당장 구직하지 않더라도, 이러한 준비를 미리 해두어야 좋은 기회를 잡을 수 있다. 대기업이나, 누구나 가고 싶은 기업에는 코딩 테스트가 존재한다. 항상 서류에서 통과가 되더라도, 코딩 테스트에서 떨어지곤 했는데 이번에는 떨어지지 않고 면접까지 가는 것이 목표이다. 대기업 면접을 통해서 합격하지 못하더라도 내가 미쳐 생각하지 못했던 부분과, 부족한 부분을 배울 수 있는 기회로 삼고 싶은데 코딩 테스트때문에 면접까지 갈 수가 없기 때문에 배울 기회가 없다. 물론 코딩 테스트를 통해서 테스트 코드를 작성하는 법과 사고력을 키울 수 있을 것 같다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/27/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sat, 27 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/27/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>facts (사실, 객관)  오늘 개발 블로그를 만들었다. 오늘 회사에 일찍 일어나서, 출근을 하였다. 테스트 주도 개발 시작하기라는 책을 3장까지 읽었다.  feelings (느낌, 주관)  블로그 서비스를 이용하는 것보다는 많은 시간이 들었다. 아직 많은 기능이 필요하지만, 실제로 그 기능이 필요할 때 까지는 최대한 늦추도록 해야겠다. 일찍자고, 일찍 일어나는 것이 늦게까지 개발을 하다가 늦게 일어나는 것 보다 효율이 좋은 것 같다. 하지만, 회사에 출근을 했을 때, 무엇을 해야할지 계획을 세우지 않아서 조금 헤메였다.</description>
    </item>
    
    <item>
      <title>테스트 코드를 작성하는 순서</title>
      <link>/post/2021/02/27/%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EC%88%9C%EC%84%9C/</link>
      <pubDate>Sat, 27 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/27/%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EC%88%9C%EC%84%9C/</guid>
      <description>테스트 코드를 작성하는 순서 테스트 코드를 작성하는 것도 무작성 작성하는 것보다는 순서를 지켜가면서 작성하는 것이 훨씬 좋다.
테스트는 다음과 같은 순서를 따르면서 작성 해야한다.   쉬운 경우에서, 어려운 경우로 진행 예외적인 경우에서, 정상적인 경우로 진행   한번에 완벽한 코드를 만들면 좋겠지만, 모두가 슈퍼 개발자인 것은 아니다. 보통의 개발자는 한 번에 많은 코드를 만들다 보면 나도 모르게 버그를 만들고 나중에 버그를 잡기 위해 많은 시간을 허비하게 된다. 당연히 테스트 통과 시간도 길어진다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/26/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Fri, 26 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/26/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  다른 사람들의 PR을 참고해보았다. (https://github.com/CodeSoom/spring-week5-assignment-1/pull/10)  Feelings (느낌, 주관)  다른 사람들의 PR에서 내가 경험해보지 못한 많은 것을 배울 수 있었다.  Findings (배운 점)  예외처리에 어떤 정보를 추가하는 것은, 디버깅하는 사람과 모니터링을 하는 사람들을 위한 서비스 정보라는 것을 알게 되었고, 이러한 사람들을 위해서 적절한 예외와 정보를 알려줘야겠다고 생각을 했다. 예외를 반드시 컨트롤러에서 처리를 하지 않아도 된다는 것을 배울 수 있었다. 어떤 예외는 레이어를 넘나들고, 어떤 예외는 다른 레이어에 공개되지 않도록 조용이 처리해야한다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/25/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Thu, 25 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/25/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  오늘도 일찍 출근하였다. 버스로 출퇴근하면서 경제 유튜브를 시청하였다. 어제 퇴근하면서 버클리에서 하는 데이터베이스 강의를 들었다. 기계인간님이 코드숨 과정을 진행할 때, 자신의 PR에 dozer-mapper를 소개하고, 자신이 생각하는 장점을 같이 기입하면 좋을 것 같다고 하셨다. 오늘 목표를 정했다. 1. LMS에서 함수 하나를 정해서 작게라도 테스트 코드를 작성하기  Feelings (느낌, 주관)  다행히도 버스를 놓치지는 않았지만 이전보다 여유를 부리는 느낌이다. 강의는 영어로 진행되었지만, 생각보다 해석하는데 어려움이 없었다. 계속 퇴근할 때 틈틈히 공부를 하면 좋을 것 같다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/24/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Wed, 24 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/24/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  오늘 이력서를 간단하게 작성을 시도해보았다. 아침에 과제를 바로 하거나, 이력서 관련 분석을 해야겠다. 더 많은 일을 하면서 더 빠르게 하기(http://agile.egloos.com/1762301) 라는 글을 읽었다.  Feelings (느낌, 주관)  경력 기술서를 간단하게 적고 있는데, 회사에서 했던일이 무엇인지 잘 생각이 나지 않는다. 어떤 일을 할 때, 작은 규모의 일을 하고 그 다음에 같은일을 좀 더 큰 규모로 하면 더 쉽다는 것이다.  Findings (배운 점)  OKR을 보면서 경력 기술서에 적을 내용을 생각해보고, 추가적으로 대외 활동을 많이 참여하거나, 오픈소스 컨트리뷰션을 많이 해야겠다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/23/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Tue, 23 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/23/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  오늘도 일찍 출근해서, 아침에 과제를 하였다. 테스트를 먼저 작성하다보니, 미완성인 클래스들을 우선 만들어주어야하는 경우가 있었다. 오늘 퍼블리싱 세미나에 참석했다. 스마트한 시간관리, 인생관리 습관이라는 책을 읽었다.  Feelings (느낌, 주관)  내가 자본주의를 살면서 느낀 것은 하이 리턴을 바랄 려면 하이 리스크를 감당할 줄 알아야하는 것과, 시간은 곧 돈이고 모든 서비스는 어떻게 보면 다른 사람들의 시간을 아껴주는데서 발생한다는 것이다. 따라서 다른 사람들이 어떤 일에 시간이라는 자원을 많이 들이는지 그리고 내가 어떻게 하면 그 시간을 줄여줄 수 있는지에 대해서 고민을 하자.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/22/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Mon, 22 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/22/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  어제 일찍 자고, 일찍 출근하여 개발 공부를 하였다. 오늘 퇴근하는 길에, 라인 개발자 공고를 보았다.  Feelings (느낌, 주관)  출근 시간이 훨씬 빨라진 느낌을 받았다. 하루가 길게 느껴졌고, 코드숨 강의를 여유롭게 들을 수 있었다. 나도 저런곳에서 한번 일해보고 싶은 마음이 있었다. 요즘 배우고 있는 TDD를 코딩 테스트를 풀면 일석이조의 효과를 누릴 수 있겠다는 생각을 했다. 빌 에반스가 성공한 사람들은 놀랍게도 현실적인 관점을 가지고 있다는 말을 했다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/21/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sun, 21 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/21/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  백기선님의 유튜브 영상을 보았다. (https://www.youtube.com/watch?v=iua0nrfh4_Q&amp;amp;feature=share) 이직관련해서 좋은 영상들을 많이 보았다.  개발자가 이직하는 방법 (전략) (https://www.youtube.com/watch?v=W5Nx4Bq7Y-4&amp;amp;feature=share) 개발자 취업의 비밀 (역시사지)(https://www.youtube.com/watch?v=PWl9dmwnzoo&amp;amp;feature=share)   네이버 FINANCIAL에 지원을 해보았다.(https://recruit.navercorp.com/naver/job/detail/developer?annoId=20005127&amp;amp;classId=&amp;amp;jobId=&amp;amp;entTypeCd=&amp;amp;searchTxt=&amp;amp;searchSysComCd=) 자기 회고를 했던 일과 느낀점을 나열하고 있었다. 코딩을 할 때 세심하게 주의를 기울이지 않는 것 같다.  Feelings (느낌, 주관)  단지 회고를 할 때 내가 했던일, 느낀점, 자기 선언을 나열하는 형식보다는 알아보기 쉽게 하는 능력이 부러웠다. 이력서를 다시 작성하고 보니, 나의 부족한 점이 무엇인지 알 수 있었다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/20/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Sat, 20 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/20/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  오늘 TDD로 과제를 하기 위해서 회사에 나왔다. 오류 메시지가 나왔을 때, 아샬님은 어떤 오류 메시지가 발생하였는지 꼼꼼하게 읽어 보고 개선을 하지만, 나는 그냥 대충 읽어본다는 사실을 발견하였다. 매일 회고를 작성하니까, 주간 회고를 더 상세하고 의미 있게 작성할 수 있었다. 테스트 주도 개발 시작하기라는 책을 2장까지 읽어보았다. 회고를 작성하는 것도 좋지만, 내가 지난 회고를 보고 다시 리마인드 할 수 있게 만드는 것도 생각을 해봐야겠다. TDD를 진행하면서 과제를 하였다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/19/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Fri, 19 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/19/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  오늘 친구랑 같이 졸업 사진을 찍었다. 졸업 사진을 찍으면서 많은 이야기를 할 수 있었다. 개발 관련된 이야기를 하면서 많은 것을 생각해 볼 수 있었다. 개발자 이종립님이 코드에 작성한 주석을 바탕으로 문서화를 할 수 있다는 것을 알려주었다. 성공의 단계에 이르는 빌 에반스의 연습 방법이라는 영상을 보았다. (https://youtube.com/watch?v=anH8Y8vAz2Q&amp;amp;feature=share) 나 혼자 독단적으로 판단해서 과제를 진행하던 것을, 초기화 시켰다.  Feelings (느낌, 주관)  교수님이 추천한 곳으로 취직한 얘들은 별로 좋은 조건에 취업을 하지 못했다는 느낌을 받았다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/18/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Thu, 18 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/18/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)  요즘 출퇴근 하면서 30대 방구석 이야기라는 유튜브 채널을 시청하고 있다. 개발 이야기 및 삶에 대한 좋은 자세를 배울 수 있었다. 이슈를 볼 때 현상에 집중하는 것 보다 빠르게 본질을 파악하는 것이 중요하다. 내가 작성한 코드에 대해서 근거와 논리가 있어야한다는 것을 알게 되었다. 오늘 내가 작성한 코드에 대해서 왜 이렇게 작성하였는지, 질문이 들어왔다. 우연하게 내가 작성한 코드가 올바른 이유를 가지고는 있었지만 의도했다고는 말을 하지 못하겠다.  Feelings (느낌, 주관)  나도 이러한 자세를 가지고 일을 하고 살아가고 싶다는 느낌을 받았다.</description>
    </item>
    
    <item>
      <title>일일 회고</title>
      <link>/post/2021/02/17/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</link>
      <pubDate>Wed, 17 Feb 2021 12:29:39 +0900</pubDate>
      
      <guid>/post/2021/02/17/%EC%9D%BC%EC%9D%BC-%ED%9A%8C%EA%B3%A0/</guid>
      <description>Facts (사실, 객관)   좋은 유튜브 채널을 찾았다. (https://www.youtube.com/channel/UCyCFnxi_hBaLvL6pV_zVILQ) 면접을 보면서 공부한 내용을 정리하면 좋을 것 같다는 생각을 했다.
  최근에 네트워크 관련한 문제로 골머리를 앓고 있는데, 네트워크 패킷 분석에 대해서 조금 알아둔다면 이러한 상황에 잘 대처를 할 수 있을 것 같다는 생각을 했다.
  아샬님의 강의를 보다가 느꼈는데, 실제 인터페이스와 서비스, 그리고 인터페이스를 상속받는 클래스와의 의존성을 간단히 확인하고 계셨다. 그 방법은 메서드를 변경해보는 것이다. 그러자 인텔리제이에서 에러를 알아서 표시를 해주었고, 자연스럽게 의존하고 있는 부분이 들어났다.</description>
    </item>
    
  </channel>
</rss>